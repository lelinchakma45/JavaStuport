/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javastuport;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lelin
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        userName = new javax.swing.JLabel();
        deshboardTab = new javax.swing.JButton();
        eventPanelTab = new javax.swing.JButton();
        routinePanelTab = new javax.swing.JButton();
        classRoutineTab = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        userMail = new javax.swing.JLabel();
        notePanelTab = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        deshBoard = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        eventTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        midExam = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        noteTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        routineTable = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        finalExamTable = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        noteTab = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        noteTitle = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        addNoteBtn = new javax.swing.JButton();
        updateNote = new javax.swing.JButton();
        noteDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        noteDescription = new javax.swing.JTextArea();
        noteID = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        noteTableBig = new javax.swing.JTable();
        eventTab = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        eventName = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        eventDetails = new javax.swing.JTextArea();
        addEvent = new javax.swing.JButton();
        updateEvent = new javax.swing.JButton();
        deleteEvent = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        eventLocation = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        eventDate = new javax.swing.JTextField();
        eventID = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tableEvent = new javax.swing.JTable();
        routinTab = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        activityName = new javax.swing.JTextField();
        startTime = new javax.swing.JTextField();
        finishedTime = new javax.swing.JTextField();
        routineAdd = new javax.swing.JButton();
        updateRoutine = new javax.swing.JButton();
        deleteRoutine = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        routineID = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        routineTableBig = new javax.swing.JTable();
        classRoutine = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        classSubjectName = new javax.swing.JTextField();
        classDay = new javax.swing.JTextField();
        classStime = new javax.swing.JTextField();
        classFtime = new javax.swing.JTextField();
        addClassRoutine = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        classRoutineID = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        classRoutineTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 153, 255));

        userName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        userName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userName.setText("Lelin Chakma");

        deshboardTab.setBackground(new java.awt.Color(153, 204, 255));
        deshboardTab.setText("Deshboard");
        deshboardTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deshboardTabActionPerformed(evt);
            }
        });

        eventPanelTab.setBackground(new java.awt.Color(153, 204, 255));
        eventPanelTab.setText("Events");
        eventPanelTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventPanelTabActionPerformed(evt);
            }
        });

        routinePanelTab.setBackground(new java.awt.Color(153, 204, 255));
        routinePanelTab.setText("Routine");
        routinePanelTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routinePanelTabActionPerformed(evt);
            }
        });

        classRoutineTab.setBackground(new java.awt.Color(153, 204, 255));
        classRoutineTab.setText("Class Routine");
        classRoutineTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classRoutineTabActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 204, 255));
        jButton2.setText("Exam Routine");

        userMail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userMail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userMail.setText("User Mail");

        notePanelTab.setBackground(new java.awt.Color(153, 204, 255));
        notePanelTab.setText("Note");
        notePanelTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notePanelTabActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deshboardTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(routinePanelTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(eventPanelTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(classRoutineTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userMail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(notePanelTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(userName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userMail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(deshboardTab, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notePanelTab, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventPanelTab, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(routinePanelTab, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classRoutineTab, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 663));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        deshBoard.setBackground(new java.awt.Color(204, 204, 255));

        eventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Location", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        eventTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                eventTableMouseMoved(evt);
            }
        });
        jScrollPane5.setViewportView(eventTable);
        if (eventTable.getColumnModel().getColumnCount() > 0) {
            eventTable.getColumnModel().getColumn(0).setResizable(false);
            eventTable.getColumnModel().getColumn(1).setResizable(false);
            eventTable.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Recent Events", jPanel8);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        midExam.addTab("Mid Exam", jPanel13);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(midExam)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(midExam, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel2.setText("Recent Note");

        jButton7.setText("Add Note");

        noteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title", "Details"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        noteTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                noteTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                noteTableMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(noteTable);
        if (noteTable.getColumnModel().getColumnCount() > 0) {
            noteTable.getColumnModel().getColumn(0).setResizable(false);
            noteTable.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(jSeparator1))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)))
        );

        routineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Saturday", "Sunday", "Monday", "Tuesday", "Wednessday", "Thursday", "Friday"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(routineTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(finalExamTable)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(finalExamTable)
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane11.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Final Exam", jPanel9);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        javax.swing.GroupLayout deshBoardLayout = new javax.swing.GroupLayout(deshBoard);
        deshBoard.setLayout(deshBoardLayout);
        deshBoardLayout.setHorizontalGroup(
            deshBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deshBoardLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(deshBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(deshBoardLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(deshBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        deshBoardLayout.setVerticalGroup(
            deshBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deshBoardLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(deshBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(deshBoardLayout.createSequentialGroup()
                        .addGroup(deshBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(deshBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", deshBoard);

        noteTab.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(153, 153, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Note Title");

        noteTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Note Details");

        addNoteBtn.setBackground(new java.awt.Color(153, 255, 153));
        addNoteBtn.setText("Add");
        addNoteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNoteBtnActionPerformed(evt);
            }
        });

        updateNote.setBackground(new java.awt.Color(255, 255, 153));
        updateNote.setText("Update");
        updateNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateNoteActionPerformed(evt);
            }
        });

        noteDelete.setBackground(new java.awt.Color(255, 102, 102));
        noteDelete.setText("Delete");
        noteDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteDeleteActionPerformed(evt);
            }
        });

        noteDescription.setColumns(20);
        noteDescription.setRows(5);
        jScrollPane2.setViewportView(noteDescription);

        noteID.setUI(null);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(noteID, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(noteTitle)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(noteDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addNoteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(noteTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(41, 41, 41)
                                .addComponent(noteID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(addNoteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateNote, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noteDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        noteTableBig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Note ID", "Note Name", "Note Details"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        noteTableBig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                noteTableBigMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                noteTableBigMouseEntered(evt);
            }
        });
        jScrollPane6.setViewportView(noteTableBig);
        if (noteTableBig.getColumnModel().getColumnCount() > 0) {
            noteTableBig.getColumnModel().getColumn(0).setResizable(false);
            noteTableBig.getColumnModel().getColumn(1).setResizable(false);
            noteTableBig.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout noteTabLayout = new javax.swing.GroupLayout(noteTab);
        noteTab.setLayout(noteTabLayout);
        noteTabLayout.setHorizontalGroup(
            noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        noteTabLayout.setVerticalGroup(
            noteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(noteTabLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("tab1", noteTab);

        eventTab.setBackground(new java.awt.Color(255, 255, 255));

        jPanel10.setBackground(new java.awt.Color(204, 255, 204));

        eventDetails.setColumns(20);
        eventDetails.setRows(5);
        jScrollPane8.setViewportView(eventDetails);

        addEvent.setBackground(new java.awt.Color(51, 255, 51));
        addEvent.setText("Add");
        addEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventActionPerformed(evt);
            }
        });

        updateEvent.setBackground(new java.awt.Color(255, 204, 102));
        updateEvent.setText("Update");
        updateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEventActionPerformed(evt);
            }
        });

        deleteEvent.setBackground(new java.awt.Color(255, 51, 0));
        deleteEvent.setText("Delete");
        deleteEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEventActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Event Name");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Event Details");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Event Location");

        eventDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventDateActionPerformed(evt);
            }
        });

        eventID.setUI(null);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(eventName)
                    .addComponent(jScrollPane8)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(eventLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eventDate, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteEvent, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                .addGap(62, 62, 62)
                .addComponent(eventID, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addEvent)
                            .addComponent(eventID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eventName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(updateEvent)
                        .addGap(18, 18, 18)
                        .addComponent(deleteEvent))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eventLocation, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(eventDate))))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        tableEvent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Event ID", "Event Name", "Event Details", "Event Location", "Event Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEvent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEventMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableEventMouseEntered(evt);
            }
        });
        jScrollPane7.setViewportView(tableEvent);
        if (tableEvent.getColumnModel().getColumnCount() > 0) {
            tableEvent.getColumnModel().getColumn(0).setResizable(false);
            tableEvent.getColumnModel().getColumn(1).setResizable(false);
            tableEvent.getColumnModel().getColumn(2).setResizable(false);
            tableEvent.getColumnModel().getColumn(3).setResizable(false);
            tableEvent.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout eventTabLayout = new javax.swing.GroupLayout(eventTab);
        eventTab.setLayout(eventTabLayout);
        eventTabLayout.setHorizontalGroup(
            eventTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        eventTabLayout.setVerticalGroup(
            eventTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventTabLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab2", eventTab);

        routinTab.setBackground(new java.awt.Color(255, 255, 255));

        jPanel12.setBackground(new java.awt.Color(204, 255, 204));

        routineAdd.setBackground(new java.awt.Color(102, 255, 102));
        routineAdd.setText("Add Routine");
        routineAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routineAddActionPerformed(evt);
            }
        });

        updateRoutine.setBackground(new java.awt.Color(255, 255, 153));
        updateRoutine.setText("Update Routine");
        updateRoutine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRoutineActionPerformed(evt);
            }
        });

        deleteRoutine.setBackground(new java.awt.Color(255, 153, 153));
        deleteRoutine.setText("Delete Routine");
        deleteRoutine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRoutineActionPerformed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Activity Name");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Start Time");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Finished Time");

        routineID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        routineID.setUI(null);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(activityName)
                    .addComponent(startTime, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                    .addComponent(finishedTime))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(routineAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateRoutine, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(deleteRoutine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(routineID, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(activityName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(routineAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateRoutine)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(routineID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(finishedTime, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(deleteRoutine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(4, 4, 4))
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
        );

        routineTableBig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Routine ID", "Subejct", "Start Time", "Finished Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        routineTableBig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                routineTableBigMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                routineTableBigMouseEntered(evt);
            }
        });
        jScrollPane10.setViewportView(routineTableBig);
        if (routineTableBig.getColumnModel().getColumnCount() > 0) {
            routineTableBig.getColumnModel().getColumn(0).setResizable(false);
            routineTableBig.getColumnModel().getColumn(1).setResizable(false);
            routineTableBig.getColumnModel().getColumn(2).setResizable(false);
            routineTableBig.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout routinTabLayout = new javax.swing.GroupLayout(routinTab);
        routinTab.setLayout(routinTabLayout);
        routinTabLayout.setHorizontalGroup(
            routinTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        routinTabLayout.setVerticalGroup(
            routinTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(routinTabLayout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", routinTab);

        classRoutine.setBackground(new java.awt.Color(255, 255, 255));

        jPanel11.setBackground(new java.awt.Color(204, 255, 255));

        classSubjectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classSubjectNameActionPerformed(evt);
            }
        });

        addClassRoutine.setBackground(new java.awt.Color(153, 255, 153));
        addClassRoutine.setText("Add Class");
        addClassRoutine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassRoutineActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 153));
        jButton3.setText("Update Class");

        jButton4.setBackground(new java.awt.Color(255, 102, 102));
        jButton4.setText("Delete Class");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Subject Name");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Routine Day");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Start Time & End Time");

        classRoutineID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        classRoutineID.setText("ww");
        classRoutineID.setUI(null);
        classRoutineID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classRoutineIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(classSubjectName)
                    .addComponent(classDay)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(classStime, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classFtime, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addClassRoutine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(209, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(classRoutineID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addClassRoutine, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classSubjectName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classDay, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(classFtime, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classStime, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(4, 4, 4)
                .addComponent(classRoutineID, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        classRoutineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Routine ID", "Subject Name", "Routine Day", "Start Time", "Finished Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        classRoutineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classRoutineTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                classRoutineTableMouseEntered(evt);
            }
        });
        jScrollPane9.setViewportView(classRoutineTable);
        if (classRoutineTable.getColumnModel().getColumnCount() > 0) {
            classRoutineTable.getColumnModel().getColumn(0).setResizable(false);
            classRoutineTable.getColumnModel().getColumn(1).setResizable(false);
            classRoutineTable.getColumnModel().getColumn(2).setResizable(false);
            classRoutineTable.getColumnModel().getColumn(3).setResizable(false);
            classRoutineTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout classRoutineLayout = new javax.swing.GroupLayout(classRoutine);
        classRoutine.setLayout(classRoutineLayout);
        classRoutineLayout.setHorizontalGroup(
            classRoutineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        classRoutineLayout.setVerticalGroup(
            classRoutineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classRoutineLayout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab3", classRoutine);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, -37, 1060, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String email;
    
    private void deshboardTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deshboardTabActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_deshboardTabActionPerformed

    private void eventPanelTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventPanelTabActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_eventPanelTabActionPerformed

    private void notePanelTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notePanelTabActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_notePanelTabActionPerformed

    private void routinePanelTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routinePanelTabActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_routinePanelTabActionPerformed

    private void addNoteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNoteBtnActionPerformed
        // TODO add your handling code here:
        String noteName = noteTitle.getText(), noteDetails = noteDescription.getText();
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            
            String notequery = "INSERT INTO note(user_email,note_name,note_details) VALUES(?,?,?)";
            PreparedStatement pst = con.prepareStatement(notequery);
            pst.setString(1, email);
            pst.setString(2, noteName);
            pst.setString(3, noteDetails);
    
            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(new JFrame(), "Data Insert Successful");
                noteTitle.setText("");
                noteDescription.setText("");
            }
            con.close();
        }
        catch(Exception e){
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_addNoteBtnActionPerformed

    private void noteTableBigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noteTableBigMouseClicked
        // TODO add your handling code here:
        DefaultTableModel noteTableUpdate = (DefaultTableModel)noteTableBig.getModel();
        int selectedRows = noteTableBig.getSelectedRow();
        noteID.setText(noteTableUpdate.getValueAt(selectedRows, 0).toString());
        noteTitle.setText(noteTableUpdate.getValueAt(selectedRows, 1).toString());
        noteDescription.setText(noteTableUpdate.getValueAt(selectedRows, 2).toString());
        

    
        
    }//GEN-LAST:event_noteTableBigMouseClicked

    private void noteTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noteTableMouseClicked
       
    }//GEN-LAST:event_noteTableMouseClicked

    private void noteTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noteTableMouseEntered
        // TODO add your handling code here:
        String sUrl, sUser, sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser = "root";
        sPass = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl, sUser, sPass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM note WHERE user_email = '" + email + "'";
            ResultSet rs = st.executeQuery(query);
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Note Name");
            model.addColumn("Note Details");
            while (rs.next()) {
                String noteName = rs.getString("note_name");
                String noteDetails = rs.getString("note_details");
            
                String tableData[] = {noteName, noteDetails};
            
                model.addRow(tableData);
            
            }
            noteTable.setModel(model);
            con.close();
        
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_noteTableMouseEntered

    private void addEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventActionPerformed
        // TODO add your handling code here:
        String eventNameText = eventName.getText(), eventDetailsText = eventDetails.getText(), eventLocationText = eventLocation.getText(), eventDateText = eventDate.getText();
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            if("".equals(eventNameText)){
                JOptionPane.showMessageDialog(new JFrame(),"Event Title is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(eventDetailsText)){
                JOptionPane.showMessageDialog(new JFrame(),"Event Details is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(eventLocationText)){
                JOptionPane.showMessageDialog(new JFrame(),"Event Location is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(eventDateText)){
                JOptionPane.showMessageDialog(new JFrame(),"Event Date is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String eventquery = "INSERT INTO events(events_name,events_details,events_location, event_date, user_mail) VALUES(?,?,?,?,?)";
                PreparedStatement pste = con.prepareStatement(eventquery);
            
                pste.setString(1, eventNameText);
                pste.setString(2, eventDetailsText);
                pste.setString(3, eventLocationText);
                pste.setString(4, eventDateText);
                pste.setString(5, email);
                int rowsAffectedEvent = pste.executeUpdate();
                if (rowsAffectedEvent > 0) {
                    JOptionPane.showMessageDialog(new JFrame(), "Event Data Insert Successful");
                    eventName.setText("");
                    eventDetails.setText("");
                    eventLocation.setText("");
                }
                con.close();
            }
        }
        catch(Exception e){
            System.out.println("Error" + e.getMessage());
        }
        
    }//GEN-LAST:event_addEventActionPerformed

    private void tableEventMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEventMouseEntered
        // TODO add your handling code here:
        String sUrl, sUser, sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser = "root";
        sPass = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl, sUser, sPass);
            Statement st = con.createStatement();

            String eventshowquery = "SELECT * FROM events WHERE user_mail = '" + email + "'";
            ResultSet rsevent = st.executeQuery(eventshowquery);
            DefaultTableModel modelEvent = new DefaultTableModel();
            modelEvent.addColumn("Event ID");
            modelEvent.addColumn("Event Name");
            modelEvent.addColumn("Event Details");
            modelEvent.addColumn("Event Location");
            modelEvent.addColumn("Event Date");
            while (rsevent.next()) {
                String eventIdDate = rsevent.getString("events_id");
                String eventNameDate = rsevent.getString("events_name");
                String eventDetailsData = rsevent.getString("events_details");
                String eventLocationData = rsevent.getString("events_location");
                String eventDateData = rsevent.getString("event_date");
            
                String tableEventData[] = {eventIdDate,eventNameDate, eventDetailsData,eventLocationData, eventDateData};
            
                modelEvent.addRow(tableEventData);
            
            }
            tableEvent.setModel(modelEvent);
            con.close();
        
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_tableEventMouseEntered

    private void eventDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventDateActionPerformed

    private void classSubjectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classSubjectNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classSubjectNameActionPerformed

    private void noteTableBigMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noteTableBigMouseEntered
        // TODO add your handling code here:
        String sUrl, sUser, sPass;
    sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
    sUser = "root";
    sPass = "";

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection(sUrl, sUser, sPass);
        Statement st = con.createStatement();

        String query = "SELECT * FROM note WHERE user_email = '" + email + "'";
        ResultSet rs = st.executeQuery(query);
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Note ID");
        model.addColumn("Note Name");
        model.addColumn("Note Details");
        while (rs.next()) {
            String noteID = rs.getString("note_id");
            String noteName = rs.getString("note_name");
            String noteDetails = rs.getString("note_details");
            
            String tableData[] = {noteID,noteName, noteDetails};
            
            model.addRow(tableData);
            
        }
        noteTableBig.setModel(model);
        con.close();
        
    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    }
    }//GEN-LAST:event_noteTableBigMouseEntered

    private void updateNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateNoteActionPerformed
        // TODO add your handling code here:
        String noteName = noteTitle.getText(), noteDetails = noteDescription.getText();
        int noteid = Integer.parseInt(noteID.getText());
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            if("".equals(noteName)){
                JOptionPane.showMessageDialog(new JFrame(),"Note Title is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(noteDetails)){
                JOptionPane.showMessageDialog(new JFrame(),"Note Details is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String notequery = "UPDATE note SET note_name = ? ,note_details = ? WHERE note_id = ? ";
                PreparedStatement pst = con.prepareStatement(notequery);
                pst.setString(1, noteName);
                pst.setString(2, noteDetails);
                pst.setInt(3, noteid);
    
                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(new JFrame(), "Data Updated Successful");
                    noteTitle.setText("");
                    noteDescription.setText("");
                }
                con.close();
            }
        }
        catch(Exception e){
            System.out.println("Error" + e.getMessage());
        }
        
    }//GEN-LAST:event_updateNoteActionPerformed

    private void noteDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteDeleteActionPerformed
        // TODO add your handling code here:
        int noteid = Integer.parseInt(noteID.getText());
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            
            String notequery = "DELETE FROM note WHERE note_id = ? ";
            PreparedStatement pst = con.prepareStatement(notequery);
            pst.setInt(1, noteid);
    
            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(new JFrame(), "Data Delete Successful");
                noteTitle.setText("");
                noteDescription.setText("");
                noteID.setText("");
            }
            con.close();
            
        }
        catch(Exception e){
            System.out.println("Error" + e.getMessage());
        }
        
    }//GEN-LAST:event_noteDeleteActionPerformed

    private void tableEventMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEventMouseClicked
        // TODO add your handling code here:
        DefaultTableModel eventTableUpdate = (DefaultTableModel)tableEvent.getModel();
        int selectedRows = tableEvent.getSelectedRow();
        eventID.setText(eventTableUpdate.getValueAt(selectedRows, 0).toString());
        eventName.setText(eventTableUpdate.getValueAt(selectedRows, 1).toString());
        eventDetails.setText(eventTableUpdate.getValueAt(selectedRows, 2).toString());
        eventLocation.setText(eventTableUpdate.getValueAt(selectedRows, 3).toString());
        eventDate.setText(eventTableUpdate.getValueAt(selectedRows, 4).toString());
    }//GEN-LAST:event_tableEventMouseClicked

    private void updateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEventActionPerformed
        // TODO add your handling code here:
        String eventNameUpdate = eventName.getText(), eventDetailsUpdate = eventDetails.getText() ,eventLocationUpdate = eventLocation.getText(), eventDateUpdate = eventDate.getText();
        int eventid = Integer.parseInt(eventID.getText());
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            if("".equals(eventNameUpdate)){
                JOptionPane.showMessageDialog(new JFrame(),"Event Title is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(eventDetailsUpdate)){
                JOptionPane.showMessageDialog(new JFrame(),"Event Details is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(eventLocationUpdate)){
                JOptionPane.showMessageDialog(new JFrame(),"Event Location is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(eventDateUpdate)){
                JOptionPane.showMessageDialog(new JFrame(),"Event Date is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String notequery = "UPDATE events SET events_name = ? ,events_details = ?,events_location = ?,event_date = ? WHERE events_id = ? ";
                PreparedStatement pst = con.prepareStatement(notequery);
                pst.setString(1, eventNameUpdate);
                pst.setString(2, eventDetailsUpdate);
                pst.setString(3, eventLocationUpdate);
                pst.setString(4, eventDateUpdate);
                pst.setInt(5, eventid);
    
                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(new JFrame(), "Event Data Updated Successful");
                    noteTitle.setText("");
                    noteDescription.setText("");
                }
                con.close();
            }
        }
        catch(Exception e){
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_updateEventActionPerformed

    private void deleteEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEventActionPerformed
        // TODO add your handling code here:
        int eventid = Integer.parseInt(eventID.getText());
        String eventNameData = eventName.getText();
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            
            String notequery = "DELETE FROM events WHERE events_id = ? ";
            PreparedStatement pst = con.prepareStatement(notequery);
            pst.setInt(1, eventid);
    
            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(new JFrame(), ""+eventNameData+" Data Delete Successful");
                eventName.setText("");
                eventDetails.setText("");
                eventID.setText("");
            }
            con.close();
            
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_deleteEventActionPerformed

    private void routineAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routineAddActionPerformed
        // TODO add your handling code here:
        String routineName = activityName.getText(), routineStartTime = startTime.getText(), routineFinishedTime = finishedTime.getText();
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            if("".equals(routineName)){
                JOptionPane.showMessageDialog(new JFrame(),"Activity Name is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(routineStartTime)){
                JOptionPane.showMessageDialog(new JFrame(),"Start Time is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(routineFinishedTime)){
                JOptionPane.showMessageDialog(new JFrame(),"Finished Time is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String eventquery = "INSERT INTO routine( user_mail, routine_name, routine_stime, routine_ftime) VALUES(?,?,?,?)";
                PreparedStatement pste = con.prepareStatement(eventquery);
            
                pste.setString(1, email);
                pste.setString(2, routineName);
                pste.setString(3, routineStartTime);
                pste.setString(4, routineFinishedTime);
                int rowsAffectedEvent = pste.executeUpdate();
                if (rowsAffectedEvent > 0) {
                    JOptionPane.showMessageDialog(new JFrame(), "Routine Data Insert Successful");
                    activityName.setText("");
                    startTime.setText("");
                    finishedTime.setText("");
                }
                con.close();
            }
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_routineAddActionPerformed

    private void routineTableBigMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_routineTableBigMouseEntered
        // TODO add your handling code here:
        String sUrl, sUser, sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser = "root";
        sPass = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl, sUser, sPass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM routine WHERE user_mail = '" + email + "'";
            ResultSet rs = st.executeQuery(query);
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Routine ID");
            model.addColumn("Activity Name");
            model.addColumn("Start Time");
            model.addColumn("Finished Time");
            while (rs.next()) {
                String routineIDData = rs.getString("routine_id");
                String rotuineNameData = rs.getString("routine_name");
                String routineStartTime = rs.getString("routine_stime");
                String routineFinishedTime = rs.getString("routine_ftime");
            
                String tableData[] = {routineIDData, rotuineNameData, routineStartTime, routineFinishedTime};
            
                model.addRow(tableData);
            
            }
            routineTableBig.setModel(model);
            con.close();
        
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_routineTableBigMouseEntered

    private void routineTableBigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_routineTableBigMouseClicked
        // TODO add your handling code here:
        DefaultTableModel eventTableUpdate = (DefaultTableModel)routineTableBig.getModel();
        int selectedRows = routineTableBig.getSelectedRow();
        routineID.setText(eventTableUpdate.getValueAt(selectedRows, 0).toString());
        activityName.setText(eventTableUpdate.getValueAt(selectedRows, 1).toString());
        startTime.setText(eventTableUpdate.getValueAt(selectedRows, 2).toString());
        finishedTime.setText(eventTableUpdate.getValueAt(selectedRows, 3).toString());
    }//GEN-LAST:event_routineTableBigMouseClicked

    private void updateRoutineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRoutineActionPerformed
        // TODO add your handling code here:
        String routineNameUpdate = activityName.getText(), routineStartUpdate = startTime.getText() ,routineFiishedUpdate = finishedTime.getText();
        int eventid = Integer.parseInt(routineID.getText());
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            if("".equals(routineNameUpdate)){
                JOptionPane.showMessageDialog(new JFrame(),"Routine Name is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(routineStartUpdate)){
                JOptionPane.showMessageDialog(new JFrame(),"Start Time is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(routineFiishedUpdate)){
                JOptionPane.showMessageDialog(new JFrame(),"Finished Time is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String notequery = "UPDATE routine SET routine_name = ? ,routine_stime = ?,routine_ftime = ? WHERE routine_id = ? ";
                PreparedStatement pst = con.prepareStatement(notequery);
                pst.setString(1, routineNameUpdate);
                pst.setString(2, routineStartUpdate);
                pst.setString(3, routineFiishedUpdate);
                pst.setInt(4, eventid);
    
                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(new JFrame(), "Routine Data Updated Successful");
                    activityName.setText("");
                    startTime.setText("");
                    finishedTime.setText("");
                    routineID.setText("");
                }
                con.close();
            }
        }
        catch(Exception e){
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_updateRoutineActionPerformed

    private void deleteRoutineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRoutineActionPerformed
        // TODO add your handling code here:
        int routineid = Integer.parseInt(routineID.getText());
        String routineNameData = activityName.getText();
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            
            String notequery = "DELETE FROM routine WHERE routine_id = ? ";
            PreparedStatement pst = con.prepareStatement(notequery);
            pst.setInt(1, routineid);
    
            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(new JFrame(), ""+routineNameData+" Data Delete Successful");
            }
            con.close();
            
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_deleteRoutineActionPerformed

    private void classRoutineTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classRoutineTabActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_classRoutineTabActionPerformed

    private void classRoutineIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classRoutineIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classRoutineIDActionPerformed

    private void addClassRoutineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassRoutineActionPerformed
        // TODO add your handling code here:
        String routineClassSubject = classSubjectName.getText(), routineClassDay = classDay.getText(), routineClassStartTime = classStime.getText(), routineClassFinishedTime = classFtime.getText();
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            if("".equals(routineClassSubject)){
                JOptionPane.showMessageDialog(new JFrame(),"Subject Name is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(routineClassDay)){
                JOptionPane.showMessageDialog(new JFrame(),"Routine Day is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(routineClassStartTime)){
                JOptionPane.showMessageDialog(new JFrame(),"Routine Start Time is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else if("".equals(routineClassFinishedTime)){
                JOptionPane.showMessageDialog(new JFrame(),"Routine Finished Time is Empty","Error",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String eventquery = "INSERT INTO class_routine( user_mail, subject_name, routine_day, stime, ftime) VALUES(?,?,?,?,?)";
                PreparedStatement pste = con.prepareStatement(eventquery);
            
                pste.setString(1, email);
                pste.setString(2, routineClassSubject);
                pste.setString(3, routineClassDay);
                pste.setString(4, routineClassStartTime);
                pste.setString(5, routineClassFinishedTime);
                int rowsAffectedEvent = pste.executeUpdate();
                if (rowsAffectedEvent > 0) {
                    JOptionPane.showMessageDialog(new JFrame(), "Class Routine Data Insert Successful");
                    classSubjectName.setText("");
                    classDay.setText("");
                    classStime.setText("");
                    classFtime.setText("");
                }
                con.close();
            }
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
            System.out.println("Error" + e.getMessage());
        }
    }//GEN-LAST:event_addClassRoutineActionPerformed

    private void classRoutineTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classRoutineTableMouseEntered
        // TODO add your handling code here:
        String sUrl, sUser, sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser = "root";
        sPass = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl, sUser, sPass);
            Statement st = con.createStatement();

            String query = "SELECT * FROM class_routine WHERE user_mail = '" + email + "'";
            ResultSet rs = st.executeQuery(query);
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Routine ID");
            model.addColumn("Subject Name");
            model.addColumn("Routine Day");
            model.addColumn("Start Time");
            model.addColumn("Finished Time");
            while (rs.next()) {
                String routineIDData = rs.getString("class_routine_id");
                String rotuineNameData = rs.getString("subject_name");
                String rotuineDayData = rs.getString("routine_day");
                String routineStartTime = rs.getString("stime");
                String routineFinishedTime = rs.getString("ftime");
            
                String tableData[] = {routineIDData, rotuineNameData,rotuineDayData, routineStartTime, routineFinishedTime};
            
                model.addRow(tableData);
            
            }
            classRoutineTable.setModel(model);
            con.close();
        
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_classRoutineTableMouseEntered

    private void classRoutineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classRoutineTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel eventTableUpdate = (DefaultTableModel)classRoutineTable.getModel();
        int selectedRows = classRoutineTable.getSelectedRow();
        classRoutineID.setText(eventTableUpdate.getValueAt(selectedRows, 0).toString());
        classSubjectName.setText(eventTableUpdate.getValueAt(selectedRows, 1).toString());
        classDay.setText(eventTableUpdate.getValueAt(selectedRows, 2).toString());
        classStime.setText(eventTableUpdate.getValueAt(selectedRows, 3).toString());
        classFtime.setText(eventTableUpdate.getValueAt(selectedRows, 4).toString());
    }//GEN-LAST:event_classRoutineTableMouseClicked

    private void eventTableMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventTableMouseMoved
        // TODO add your handling code here:
        String sUrl, sUser, sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser = "root";
        sPass = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl, sUser, sPass);
            Statement st = con.createStatement();

            String eventshowquery = "SELECT * FROM events WHERE user_mail = '" + email + "'";
            ResultSet rsevent = st.executeQuery(eventshowquery);
            DefaultTableModel modelEvent = new DefaultTableModel();
            modelEvent.addColumn("Name");
            modelEvent.addColumn("Location");
            modelEvent.addColumn("Date");
            while (rsevent.next()) {
                String eventNameDate = rsevent.getString("events_name");
                String eventLocationData = rsevent.getString("events_location");
                String eventDateData = rsevent.getString("event_date");
            
                String tableEventData[] = {eventNameDate, eventLocationData, eventDateData};
            
                modelEvent.addRow(tableEventData);
            
            }
            eventTable.setModel(modelEvent);
            con.close();
        
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_eventTableMouseMoved

    public void setUser(String mail ) {
        String sUrl, sUser,sPass;
        sUrl = "jdbc:MySQL://localhost:3306/java_stuport";
        sUser="root";
        sPass = "";
        email = mail;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(sUrl,sUser,sPass);
            Statement st = con.createStatement();
            
            String query = "SELECT * FROM users WHERE email = '"+email+"'";
            ResultSet rs = st.executeQuery(query);
             if (rs.next()) {
            String studentName = rs.getString("fullname");
            String studentMail = rs.getString("email");
            
            userName.setText(studentName);
            userMail.setText(studentMail);
            }
        }
        catch(Exception e){
            System.out.println("Error" + e.getMessage());
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activityName;
    private javax.swing.JButton addClassRoutine;
    private javax.swing.JButton addEvent;
    private javax.swing.JButton addNoteBtn;
    private javax.swing.JTextField classDay;
    private javax.swing.JTextField classFtime;
    private javax.swing.JPanel classRoutine;
    private javax.swing.JTextField classRoutineID;
    private javax.swing.JButton classRoutineTab;
    private javax.swing.JTable classRoutineTable;
    private javax.swing.JTextField classStime;
    private javax.swing.JTextField classSubjectName;
    private javax.swing.JButton deleteEvent;
    private javax.swing.JButton deleteRoutine;
    private javax.swing.JPanel deshBoard;
    private javax.swing.JButton deshboardTab;
    private javax.swing.JTextField eventDate;
    private javax.swing.JTextArea eventDetails;
    private javax.swing.JTextField eventID;
    private javax.swing.JTextField eventLocation;
    private javax.swing.JTextField eventName;
    private javax.swing.JButton eventPanelTab;
    private javax.swing.JPanel eventTab;
    private javax.swing.JTable eventTable;
    private javax.swing.JTabbedPane finalExamTable;
    private javax.swing.JTextField finishedTime;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTabbedPane midExam;
    private javax.swing.JButton noteDelete;
    private javax.swing.JTextArea noteDescription;
    private javax.swing.JTextField noteID;
    private javax.swing.JButton notePanelTab;
    private javax.swing.JPanel noteTab;
    private javax.swing.JTable noteTable;
    private javax.swing.JTable noteTableBig;
    private javax.swing.JTextField noteTitle;
    private javax.swing.JPanel routinTab;
    private javax.swing.JButton routineAdd;
    private javax.swing.JTextField routineID;
    private javax.swing.JButton routinePanelTab;
    private javax.swing.JTable routineTable;
    private javax.swing.JTable routineTableBig;
    private javax.swing.JTextField startTime;
    private javax.swing.JTable tableEvent;
    private javax.swing.JButton updateEvent;
    private javax.swing.JButton updateNote;
    private javax.swing.JButton updateRoutine;
    private javax.swing.JLabel userMail;
    private javax.swing.JLabel userName;
    // End of variables declaration//GEN-END:variables

    
}
